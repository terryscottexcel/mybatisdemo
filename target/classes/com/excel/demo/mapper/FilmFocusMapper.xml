<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.excel.demo.mapper.FilmFocusMapper">
  <resultMap id="BaseResultMap" type="com.excel.demo.model.FilmFocus">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="film_code" jdbcType="VARCHAR" property="filmCode" />
    <result column="film_name" jdbcType="VARCHAR" property="filmName" />
    <result column="film_actors" jdbcType="VARCHAR" property="filmActors" />
    <result column="film_show_date" jdbcType="TIMESTAMP" property="filmShowDate" />
    <result column="film_price" jdbcType="DECIMAL" property="filmPrice" />
    <result column="film_rmk" jdbcType="VARCHAR" property="filmRmk" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_filmfocus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.excel.demo.model.FilmFocus">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_filmfocus (film_code, film_name, film_actors, 
      film_show_date, film_price, film_rmk, 
      user_id)
    values (#{filmCode,jdbcType=VARCHAR}, #{filmName,jdbcType=VARCHAR}, #{filmActors,jdbcType=VARCHAR}, 
      #{filmShowDate,jdbcType=TIMESTAMP}, #{filmPrice,jdbcType=DECIMAL}, #{filmRmk,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.excel.demo.model.FilmFocus">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_filmfocus
    set film_code = #{filmCode,jdbcType=VARCHAR},
      film_name = #{filmName,jdbcType=VARCHAR},
      film_actors = #{filmActors,jdbcType=VARCHAR},
      film_show_date = #{filmShowDate,jdbcType=TIMESTAMP},
      film_price = #{filmPrice,jdbcType=DECIMAL},
      film_rmk = #{filmRmk,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, film_code, film_name, film_actors, film_show_date, film_price, film_rmk, 
    user_id
    from t_filmfocus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, film_code, film_name, film_actors, film_show_date, film_price, film_rmk, 
    user_id
    from t_filmfocus
  </select>
  <select id="selectAllByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, film_code, film_name, film_actors, film_show_date, film_price, film_rmk, 
    user_id
    from t_filmfocus where user_id=#{userId}
  </select>
  <select id="selectAllByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, film_code, film_name, film_actors, film_show_date, film_price, film_rmk, 
    user_id
    from t_filmfocus
    <where>
    	<!-- if条件里，判断参数是否为空，要使用"_parameter != null",不是"filmName != null"-->
		<if test="_parameter != null and _parameter != ''">
			and film_name LIKE '%' #{filmName} '%'
		</if>
	</where>
  </select>
  <select id="selectAllCountByParam" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) cnt
    from t_filmfocus
    <where>
    	<!-- if条件里，传递的是Map，则可以直接使用里面的key来判断，不需要带Map名字-->
		<if test="filmName != null and filmName != ''">
			and film_name LIKE '%' #{filmName} '%'
		</if>
		<if test="filmActors != null and filmActors != ''">
			and film_actors LIKE '%' #{filmActors} '%'
		</if>
		<if test="filmRmk != null and filmRmk != ''">
			and film_rmk LIKE '%' #{filmRmk} '%'
		</if>
		<if test="lowPrice != null and highPrice != null">
			and film_price between #{lowPrice} and #{highPrice}
		</if>
	</where>
  </select>
  <select id="selectAllByParam" parameterType="java.util.Map" resultMap="BaseResultMap">
    select id, film_code, film_name, film_actors, film_show_date, film_price, film_rmk, 
    user_id
    from t_filmfocus
    <where>
    	<!-- if条件里，传递的是Map，则可以直接使用里面的key来判断，不需要带Map名字-->
		<if test="filmName != null and filmName != ''">
			and film_name LIKE '%' #{filmName} '%'
		</if>
		<if test="filmActors != null and filmActors != ''">
			and film_actors LIKE '%' #{filmActors} '%'
		</if>
		<if test="filmRmk != null and filmRmk != ''">
			and film_rmk LIKE '%' #{filmRmk} '%'
		</if>
		<if test="lowPrice != null and highPrice != null">
			and film_price between #{lowPrice} and #{highPrice}
		</if>
		<if test="fromIndex != null and pageSize != null">
			limit #{fromIndex} , #{pageSize}
		</if>
	</where>
  </select>
</mapper>